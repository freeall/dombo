!function(f){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=f();else if("function"==typeof define&&define.amd)define([],f);else{var g;g="undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self?self:this,g.$=f()}}(function(){return function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a="function"==typeof require&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}for(var i="function"==typeof require&&require,o=0;o<r.length;o++)s(r[o]);return s}({1:[function(require,module){function hasClass(name){var res=!1;return this.forEach(function(node){node.className.indexOf(name)>-1&&(res=!0)}),res}function addClass(name){return this.forEach(function(node){node.className.indexOf(name)>-1||(node.className+=" "+name)})}function removeClass(name){return this.forEach(function(node){-1!==node.className.indexOf(name)&&(node.className=node.className.split(name).join(" "))})}function toggleClass(name,state){return this.forEach(function(node){return node=$(node),state===!0?node.addClass(name):state===!1?node.removeClass(name):node.hasClass(name)?node.removeClass(name):node.addClass(name)})}module.exports={hasClass:hasClass,addClass:addClass,removeClass:removeClass,toggleClass:toggleClass}},{}],2:[function(require,module){function _on(domboObj,event,selector,fOriginal,one){var called=!1;return domboObj.forEach(function(node){var fInternal=function(mouseEvent){if(!one||!called){if(!selector)return called=!0,fOriginal.apply(this,[mouseEvent]);var handlerNode=this,possibles=this.querySelectorAll(selector),isPossible=function(node){for(var i=0;i<possibles.length;i++)if(possibles[i]===node)return!0;return!1},next=function(node){node!==handlerNode&&(isPossible(node)&&(called=!0,fOriginal.apply(node,[mouseEvent])),node.parentNode&&next(node.parentNode))};next(mouseEvent.srcElement)}};node._domboListeners=node._domboListeners||{},node._domboListeners[event]=node._domboListeners[event]||[],node._domboListeners[event].push({original:fOriginal,internal:fInternal}),node.addEventListener(event,fInternal,!1)})}function on(event,filter,fn){return fn?_on(this,event,filter,fn):this.on(event,null,filter)}function one(event,filter,fn){return fn?_on(this,event,filter,fn,1):this.one(event,null,filter)}function off(event,fn){return this.forEach(function(node){node._domboListeners&&node._domboListeners[event]&&(node._domboListeners[event]=node._domboListeners[event].filter(function(listener){return listener.original!==fn?!0:(node.removeEventListener(event,listener.internal),!1)}))})}function trigger(name){return this.forEach(function(node){if(document.createEvent){var evt=document.createEvent("HTMLEvents");evt.initEvent(name,!0,!0),evt.eventName=name,node.dispatchEvent(evt)}else{var evt=document.createEventObject();evt.eventType=name,evt.eventName=name,node.fireEvent("on"+evt.eventType,evt)}})}module.exports={on:on,off:off,one:one,trigger:trigger}},{}],3:[function(require,module){function createDomboObject(nodes){var that=this,typesChecked={};nodes.forEach(function(node){if(!typesChecked[node.tagName]){typesChecked[node.tagName]=1;for(var name in node){if(that[name])return;var isFunction="function"==typeof node[name];isFunction?Object.defineProperty(that,name,functionPattern(name,nodes)):Object.defineProperty(that,name,propertyPattern(name,nodes))}}}),Object.keys(dombo.fn).forEach(function(name){that[name]=dombo.fn[name]}),nodes.forEach(function(node,i){that[i]=node}),ARRAY_PROPERTIES.forEach(function(propertyName){that[propertyName]=nodes[propertyName]}),this._dombo=!0}function propertyPattern(name,nodes){return{get:function(){var res=[];return nodes.forEach(function(node){res.push(node[name])}),1===res.length?res[0]:res},set:function(val){nodes.forEach(function(node){node[name]=val})}}}function functionPattern(name,nodes){return{get:function(){return function(){var res=[],args=arguments;return nodes.forEach(function(node){res.push(node[name].apply(node,args))}),1===res.length?res[0]:res}}}}var ARRAY_PROPERTIES=["concat","copyWithin","entries","every","fill","filter","find","findIndex","forEach","includes","indexOf","join","keys","lastIndexOf","length","map","pop","push","reduce","reduceRight","reverse","shift","slice","some","sort","splice","toLocaleString","toSource","toString","unshift","values","iterator"],dombo=function(selector,context){context=context||document;var nodes;nodes=selector._dombo?selector:selector===window||selector===document||selector.nodeName?[selector]:context.querySelectorAll(selector),nodes=nodes||[],nodes=Array.prototype.slice.call(nodes);var domboObj=new createDomboObject(nodes);return domboObj},plugins=[require("./classes"),require("./events")];dombo.fn={},plugins.forEach(function(modul){Object.keys(modul).forEach(function(name){dombo.fn[name]=modul[name]})}),module.exports=dombo},{"./classes":1,"./events":2}]},{},[3])(3)});